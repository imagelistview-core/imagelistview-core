[assembly: System.Runtime.InteropServices.ComVisible(false)]
[assembly: System.Runtime.InteropServices.Guid("3eb67a8d-4c80-4c11-944d-c99ef0ec7eb9")]
[assembly: System.Runtime.Versioning.SupportedOSPlatform("windows")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETCoreApp,Version=v6.0", FrameworkDisplayName=".NET 6.0")]
namespace Manina.Windows.Forms
{
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class CacheErrorEventArgs : System.EventArgs
    {
        public CacheErrorEventArgs(Manina.Windows.Forms.ImageListViewItem item, System.Exception error, Manina.Windows.Forms.CacheThread cacheThread) { }
        public Manina.Windows.Forms.CacheThread CacheThread { get; }
        public System.Exception Error { get; }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
    }
    public delegate void CacheErrorEventHandler(object sender, Manina.Windows.Forms.CacheErrorEventArgs e);
    public enum CacheMode
    {
        OnDemand = 0,
        Continuous = 1,
    }
    public enum CacheState
    {
        Unknown = 0,
        Cached = 1,
        Error = 2,
    }
    public enum CacheThread
    {
        Thumbnail = 0,
        Details = 1,
        ShellInfo = 2,
    }
    public enum CachedImageType
    {
        Thumbnail = 0,
        SmallIcon = 1,
        LargeIcon = 2,
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ColumnClickEventArgs : System.EventArgs
    {
        public ColumnClickEventArgs(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, System.Drawing.Point location, System.Windows.Forms.MouseButtons buttons) { }
        public System.Windows.Forms.MouseButtons Buttons { get; }
        public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader Column { get; }
        public System.Drawing.Point Location { get; }
        public int X { get; }
        public int Y { get; }
    }
    public delegate void ColumnClickEventHandler(object sender, Manina.Windows.Forms.ColumnClickEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ColumnEventArgs : System.EventArgs
    {
        public ColumnEventArgs(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column) { }
        public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader Column { get; }
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ColumnHoverEventArgs : System.EventArgs
    {
        public ColumnHoverEventArgs(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader previousColumn) { }
        public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader Column { get; }
        public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader PreviousColumn { get; }
    }
    public delegate void ColumnHoverEventHandler(object sender, Manina.Windows.Forms.ColumnHoverEventArgs e);
    [System.Flags]
    public enum ColumnState
    {
        None = 0,
        Hovered = 1,
        SeparatorHovered = 2,
        SeparatorSelected = 4,
        SortColumn = 8,
    }
    public enum ColumnType
    {
        Custom = 0,
        Name = 1,
        DateAccessed = 2,
        DateCreated = 3,
        DateModified = 4,
        FileType = 5,
        FileName = 6,
        FilePath = 7,
        FolderName = 8,
        FileSize = 9,
        Dimensions = 10,
        Resolution = 11,
        ImageDescription = 12,
        EquipmentModel = 13,
        DateTaken = 14,
        Artist = 15,
        Copyright = 16,
        ExposureTime = 17,
        FNumber = 18,
        ISOSpeed = 19,
        UserComment = 20,
        Rating = 21,
        Software = 22,
        FocalLength = 23,
    }
    public delegate void ColumnWidthChangedEventHandler(object sender, Manina.Windows.Forms.ColumnEventArgs e);
    public delegate void DetailsCachedEventHandler(object sender, Manina.Windows.Forms.ItemEventArgs e);
    public delegate void DetailsCachingEventHandler(object sender, Manina.Windows.Forms.ItemEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class DropCompleteEventArgs : System.EventArgs
    {
        public DropCompleteEventArgs(Manina.Windows.Forms.ImageListViewItem[] items, bool internalDrag) { }
        public bool InternalDrag { get; }
        public Manina.Windows.Forms.ImageListViewItem[] Items { get; }
    }
    public delegate void DropCompleteEventHandler(object sender, Manina.Windows.Forms.DropCompleteEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class DropFileEventArgs : System.EventArgs
    {
        public DropFileEventArgs(int index, string[] fileNames) { }
        public bool Cancel { get; set; }
        public string[] FileNames { get; }
        public int Index { get; }
    }
    public delegate void DropFilesEventHandler(object sender, Manina.Windows.Forms.DropFileEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class DropItemEventArgs : System.EventArgs
    {
        public DropItemEventArgs(int index, Manina.Windows.Forms.ImageListViewItem[] items) { }
        public bool Cancel { get; set; }
        public int Index { get; }
        public Manina.Windows.Forms.ImageListViewItem[] Items { get; }
    }
    public delegate void DropItemsEventHandler(object sender, Manina.Windows.Forms.DropItemEventArgs e);
    public class GDIExtractor : Manina.Windows.Forms.IExtractor
    {
        public GDIExtractor() { }
        public virtual string Name { get; }
        public virtual Manina.Windows.Forms.Metadata GetMetadata(string path) { }
        public virtual Manina.Windows.Forms.ShellInfo GetShellInfo(string path) { }
        public virtual System.Drawing.Image GetThumbnail(System.Drawing.Image image, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
        public virtual System.Drawing.Image GetThumbnail(string filename, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
        public static bool IsImage(System.IO.Stream stream) { }
    }
    public interface IExtractor
    {
        string Name { get; }
        Manina.Windows.Forms.Metadata GetMetadata(string path);
        Manina.Windows.Forms.ShellInfo GetShellInfo(string path);
        System.Drawing.Image GetThumbnail(System.Drawing.Image image, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation);
        System.Drawing.Image GetThumbnail(string filename, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation);
    }
    [System.ComponentModel.DefaultEvent("ItemClick")]
    [System.ComponentModel.DefaultProperty("Items")]
    [System.ComponentModel.Description("Represents a listview control for image files.")]
    [System.ComponentModel.Designer(typeof(Manina.Windows.Forms.ImageListViewDesigner))]
    [System.Drawing.ToolboxBitmap(typeof(Manina.Windows.Forms.ImageListView))]
    [System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)]
    public class ImageListView : System.Windows.Forms.Control, System.ComponentModel.IComponent, System.IDisposable
    {
        public ImageListView() { }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether checkboxes respond to mouse clicks.")]
        public bool AllowCheckBoxClick { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether column headers respond to mouse clicks.")]
        public bool AllowColumnClick { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether column headers can be resized with the mouse.")]
        public bool AllowColumnResize { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets whether items can be dragged out of the control to start a drag and " +
            "drop operation.")]
        public bool AllowDrag { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets whether duplicate items (image files pointing to the same path on th" +
            "e file system) are allowed.")]
        public bool AllowDuplicateFileNames { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether the user can reorder items by moving them.")]
        public bool AllowItemReorder { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether the left-pane can be resized with the mouse.")]
        public bool AllowPaneResize { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether thumbnail images are automatically rotated.")]
        public bool AutoRotateThumbnails { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.BorderStyle), "Fixed3D")]
        [System.ComponentModel.Description("Gets or sets the border style of the control.")]
        public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue("20MB")]
        [System.ComponentModel.Description("Gets or sets the cache limit as either the count of thumbnail images or the memor" +
            "y allocated for cache (e.g. 10MB).")]
        [System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]
        public string CacheLimit { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.CacheMode), "OnDemand")]
        [System.ComponentModel.Description("Gets or sets the cache mode.")]
        [System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]
        public Manina.Windows.Forms.CacheMode CacheMode { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(System.Drawing.ContentAlignment.BottomRight)]
        [System.ComponentModel.Description("Gets or sets alignment of item checkboxes.")]
        public System.Drawing.ContentAlignment CheckBoxAlignment { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "2,2")]
        [System.ComponentModel.Description("Gets or sets item checkbox padding.")]
        public System.Drawing.Size CheckBoxPadding { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the collection of checked items contained in the image list view.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Manina.Windows.Forms.ImageListView.ImageListViewCheckedItemCollection CheckedItems { get; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the color palette of the ImageListView.")]
        public Manina.Windows.Forms.ImageListViewColor Colors { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8.25pt")]
        [System.ComponentModel.Description("Gets or sets the font of the column headers.")]
        public System.Drawing.Font ColumnHeaderFont { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the collection of columns of the image list view.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeaderCollection Columns { get; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the placeholder image.")]
        public System.Drawing.Image DefaultImage { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the rectangle that represents the display area of the control.")]
        public override System.Drawing.Rectangle DisplayRectangle { get; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the empty rating image.")]
        public System.Drawing.Image EmptyRatingImage { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets a value indicating whether the control can respond to user interacti" +
            "on.")]
        public new bool Enabled { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the error image.")]
        public System.Drawing.Image ErrorImage { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(0)]
        [System.ComponentModel.Description("Gets or sets the index of the group column.")]
        public int GroupColumn { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8.25pt, style=Bold")]
        [System.ComponentModel.Description("Gets or sets the font of the group headers.")]
        public System.Drawing.Font GroupHeaderFont { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.SortOrder), "None")]
        [System.ComponentModel.Description("Gets or sets the group order.")]
        public Manina.Windows.Forms.SortOrder GroupOrder { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets whether groups are displayed.")]
        public bool GroupsVisible { get; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(System.Drawing.ContentAlignment.TopRight)]
        [System.ComponentModel.Description("Gets or sets alignment of file icons.")]
        public System.Drawing.ContentAlignment IconAlignment { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "2,2")]
        [System.ComponentModel.Description("Gets or sets file icon padding.")]
        public System.Drawing.Size IconPadding { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets whether scrollbars scroll by an amount which is a multiple of item h" +
            "eight.")]
        public bool IntegralScroll { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the collection of items contained in the image list view.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Manina.Windows.Forms.ImageListView.ImageListViewItemCollection Items { get; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether multiple items can be selected.")]
        public bool MultiSelect { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(240)]
        [System.ComponentModel.Description("Gets or sets the width of the left pane.")]
        public int PaneWidth { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets or sets the path to the persistent cache file.")]
        public string PersistentCacheDirectory { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets or sets the size of the persistent cache file in MB.")]
        public long PersistentCacheSize { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the rating image.")]
        public System.Drawing.Image RatingImage { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether the control will retry loading thumbnails on an error.")]
        public bool RetryOnError { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether the scrollbars should be shown.")]
        public bool ScrollBars { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the collection of selected items contained in the image list view.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Manina.Windows.Forms.ImageListView.ImageListViewSelectedItemCollection SelectedItems { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether shell icons are displayed for non-image files.")]
        public bool ShellIconFallback { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets or sets whether shell icons are extracted from the contents of icon and exec" +
            "utable files.")]
        public bool ShellIconFromFileContent { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets whether to display the item checkboxes.")]
        public bool ShowCheckBoxes { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets whether to display the file icons.")]
        public bool ShowFileIcons { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(0)]
        [System.ComponentModel.Description("Gets or sets the index of the sort column.")]
        public int SortColumn { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.SortOrder), "None")]
        [System.ComponentModel.Description("Gets or sets the sort order.")]
        public Manina.Windows.Forms.SortOrder SortOrder { get; set; }
        [System.ComponentModel.Browsable(false)]
        public Manina.Windows.Forms.IExtractor ThumbnailExtractor { get; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "96,96")]
        [System.ComponentModel.Description("Gets or sets the size of image thumbnails.")]
        public System.Drawing.Size ThumbnailSize { get; set; }
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.UseEmbeddedThumbnails), "Auto")]
        [System.ComponentModel.Description("Gets or sets the embedded thumbnails extraction behavior.")]
        public Manina.Windows.Forms.UseEmbeddedThumbnails UseEmbeddedThumbnails { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets whether the control uses for thumbnail extraction.")]
        public bool UseWIC { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.View), "Thumbnails")]
        [System.ComponentModel.Description("Gets or sets the view mode of the image list view.")]
        public Manina.Windows.Forms.View View { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Window")]
        [System.ComponentModel.Description("Gets or sets the background color of the control.")]
        public override System.Drawing.Color BackColor { get; set; }
        [System.ComponentModel.Bindable(false)]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DefaultValue(null)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public override string Text { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs when an error occurs during an asynchronous cache operation.")]
        public event Manina.Windows.Forms.CacheErrorEventHandler CacheError;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user clicks a column header.")]
        public event Manina.Windows.Forms.ColumnClickEventHandler ColumnClick;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user moves the mouse over (and out of) a column header.")]
        public event Manina.Windows.Forms.ColumnHoverEventHandler ColumnHover;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs after the user successfully resized a column header.")]
        public event Manina.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs after an item details is cached.")]
        public event Manina.Windows.Forms.DetailsCachedEventHandler DetailsCached;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs before an item details is cached.")]
        public event Manina.Windows.Forms.DetailsCachingEventHandler DetailsCaching;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Drag Drop")]
        [System.ComponentModel.Description("Occurs after items are dropped successfully.")]
        public event Manina.Windows.Forms.DropCompleteEventHandler DropComplete;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Drag Drop")]
        [System.ComponentModel.Description("Occurs after the user drops files on to the control.")]
        public event Manina.Windows.Forms.DropFilesEventHandler DropFiles;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Drag Drop")]
        [System.ComponentModel.Description("Occurs after the user drops items on to the control.")]
        public event Manina.Windows.Forms.DropItemsEventHandler DropItems;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user clicks an item checkbox.")]
        public event Manina.Windows.Forms.ItemCheckBoxClickEventHandler ItemCheckBoxClick;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user clicks an item.")]
        public event Manina.Windows.Forms.ItemClickEventHandler ItemClick;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs after the item collection is changed.")]
        public event Manina.Windows.Forms.ItemCollectionChangedEventHandler ItemCollectionChanged;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user double-clicks an item.")]
        public event Manina.Windows.Forms.ItemDoubleClickEventHandler ItemDoubleClick;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs when the user moves the mouse over (and out of) an item.")]
        public event Manina.Windows.Forms.ItemHoverEventHandler ItemHover;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs after the pane is resized.")]
        public event Manina.Windows.Forms.PaneResizedEventHandler PaneResized;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Action")]
        [System.ComponentModel.Description("Occurs while the pane is being resized.")]
        public event Manina.Windows.Forms.PaneResizingEventHandler PaneResizing;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs when the selected items collection changes.")]
        public event System.EventHandler SelectionChanged;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs after shell info for a file extension is cached.")]
        public event Manina.Windows.Forms.ShellInfoCachedEventHandler ShellInfoCached;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs before shell info for a file extension is cached.")]
        public event Manina.Windows.Forms.ShellInfoCachingEventHandler ShellInfoCaching;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs after an item thumbnail is cached.")]
        public event Manina.Windows.Forms.ThumbnailCachedEventHandler ThumbnailCached;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs before an item thumbnail is cached.")]
        public event Manina.Windows.Forms.ThumbnailCachingEventHandler ThumbnailCaching;
        public void CheckAll() { }
        public void CheckWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        public void ClearSelection() { }
        public void ClearThumbnailCache() { }
        public void DisableAll() { }
        public void DisableWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        protected override void Dispose(bool disposing) { }
        public void EnableAll() { }
        public void EnableWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        public bool EnsureVisible(int itemIndex) { }
        public int FindString(string s) { }
        public int FindString(string s, int startIndex) { }
        public void HitTest(System.Drawing.Point pt, out Manina.Windows.Forms.ImageListView.HitInfo hitInfo) { }
        public void InvertCheckState() { }
        public void InvertSelection() { }
        protected override bool IsInputKey(System.Windows.Forms.Keys keyData) { }
        public Manina.Windows.Forms.ItemVisibility IsItemVisible(Manina.Windows.Forms.ImageListViewItem item) { }
        protected virtual void OnCacheError(Manina.Windows.Forms.CacheErrorEventArgs e) { }
        protected virtual void OnColumnClick(Manina.Windows.Forms.ColumnClickEventArgs e) { }
        protected virtual void OnColumnHover(Manina.Windows.Forms.ColumnHoverEventArgs e) { }
        protected virtual void OnColumnWidthChanged(Manina.Windows.Forms.ColumnEventArgs e) { }
        protected virtual void OnDetailsCached(Manina.Windows.Forms.ItemEventArgs e) { }
        protected virtual void OnDetailsCaching(Manina.Windows.Forms.ItemEventArgs e) { }
        protected override void OnDragDrop(System.Windows.Forms.DragEventArgs e) { }
        protected override void OnDragEnter(System.Windows.Forms.DragEventArgs e) { }
        protected override void OnDragLeave(System.EventArgs e) { }
        protected override void OnDragOver(System.Windows.Forms.DragEventArgs e) { }
        protected virtual void OnDropComplete(Manina.Windows.Forms.DropCompleteEventArgs e) { }
        protected virtual void OnDropFiles(Manina.Windows.Forms.DropFileEventArgs e) { }
        protected virtual void OnDropItems(Manina.Windows.Forms.DropItemEventArgs e) { }
        protected override void OnGotFocus(System.EventArgs e) { }
        protected virtual void OnItemCheckBoxClick(Manina.Windows.Forms.ItemEventArgs e) { }
        protected virtual void OnItemClick(Manina.Windows.Forms.ItemClickEventArgs e) { }
        protected virtual void OnItemCollectionChanged(Manina.Windows.Forms.ItemCollectionChangedEventArgs e) { }
        protected virtual void OnItemDoubleClick(Manina.Windows.Forms.ItemClickEventArgs e) { }
        protected virtual void OnItemHover(Manina.Windows.Forms.ItemHoverEventArgs e) { }
        protected override void OnKeyDown(System.Windows.Forms.KeyEventArgs e) { }
        protected override void OnKeyUp(System.Windows.Forms.KeyEventArgs e) { }
        protected override void OnLostFocus(System.EventArgs e) { }
        protected override void OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseDown(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseLeave(System.EventArgs e) { }
        protected override void OnMouseMove(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseUp(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseWheel(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnPaint(System.Windows.Forms.PaintEventArgs e) { }
        protected virtual void OnPaneResized(Manina.Windows.Forms.PaneResizedEventArgs e) { }
        protected virtual void OnPaneResizing(Manina.Windows.Forms.PaneResizingEventArgs e) { }
        protected override void OnResize(System.EventArgs e) { }
        protected virtual void OnSelectionChanged(System.EventArgs e) { }
        protected virtual void OnShellInfoCached(Manina.Windows.Forms.ShellInfoCachedEventArgs e) { }
        protected virtual void OnShellInfoCaching(Manina.Windows.Forms.ShellInfoCachingEventArgs e) { }
        protected virtual void OnThumbnailCached(Manina.Windows.Forms.ThumbnailCachedEventArgs e) { }
        protected virtual void OnThumbnailCaching(Manina.Windows.Forms.ThumbnailCachingEventArgs e) { }
        public void ResetColors() { }
        public void ResetDefaultImage() { }
        public void ResetEmptyRatingImage() { }
        public void ResetErrorImage() { }
        public void ResetHeaderFont() { }
        public void ResetRatingImage() { }
        public new void ResumeLayout() { }
        public new void ResumeLayout(bool performLayout) { }
        public void SelectAll() { }
        public void SelectWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        public void SetRenderer(Manina.Windows.Forms.ImageListView.ImageListViewRenderer renderer) { }
        public void SetRenderer(Manina.Windows.Forms.ImageListView.ImageListViewRenderer renderer, bool keepColors) { }
        public bool ShouldSerializeColors() { }
        public bool ShouldSerializeDefaultImage() { }
        public bool ShouldSerializeEmptyRatingImage() { }
        public bool ShouldSerializeErrorImage() { }
        public bool ShouldSerializeHeaderFont() { }
        public bool ShouldSerializeRatingImage() { }
        public void Sort() { }
        public new void SuspendLayout() { }
        public void UncheckAll() { }
        public void UncheckWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        public void UnselectWhere(System.Func<Manina.Windows.Forms.ImageListViewItem, bool> predicate) { }
        public struct GroupInfo
        {
            public GroupInfo(string name, int order) { }
            public string Name { get; set; }
            public int Order { get; set; }
        }
        public class HitInfo
        {
            public bool CheckBoxHit { get; }
            public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader Column { get; }
            public bool ColumnHit { get; }
            public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader ColumnSeparator { get; }
            public bool ColumnSeparatorHit { get; }
            public bool FileIconHit { get; }
            public Manina.Windows.Forms.ImageListView.ImageListViewGroup Group { get; }
            public bool InHeaderArea { get; }
            public bool InItemArea { get; }
            public bool InPaneArea { get; }
            public bool ItemHit { get; }
            public int ItemIndex { get; }
            public bool PaneBorder { get; }
            public int SubItemIndex { get; }
        }
        public interface IGrouper
        {
            Manina.Windows.Forms.ImageListView.GroupInfo GetGroupInfo(Manina.Windows.Forms.ImageListViewItem item);
        }
        public class ImageListViewCheckedItemCollection : System.Collections.Generic.ICollection<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IEnumerable<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IList<Manina.Windows.Forms.ImageListViewItem>, System.Collections.IEnumerable
        {
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the number of elements contained in the collection.")]
            public int Count { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the ImageListView owning this collection.")]
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets a value indicating whether the collection is read-only.")]
            public bool IsReadOnly { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets or sets the item at the specified index")]
            public Manina.Windows.Forms.ImageListViewItem this[int index] { get; }
            public bool Contains(Manina.Windows.Forms.ImageListViewItem item) { }
            public System.Collections.Generic.IEnumerator<Manina.Windows.Forms.ImageListViewItem> GetEnumerator() { }
        }
        [System.ComponentModel.TypeConverter(typeof(Manina.Windows.Forms.ImageListViewColumnHeaderTypeConverter))]
        public class ImageListViewColumnHeader : System.ICloneable
        {
            public ImageListViewColumnHeader() { }
            public ImageListViewColumnHeader(Manina.Windows.Forms.ColumnType type, int width = 100, int displayIndex = -1, bool visible = true) { }
            public ImageListViewColumnHeader(Manina.Windows.Forms.ColumnType type, string text, int width = 100, int displayIndex = -1, bool visible = true) { }
            public ImageListViewColumnHeader(Manina.Windows.Forms.ColumnType type, string key, string text, int width = 100, int displayIndex = -1, bool visible = true) { }
            [System.ComponentModel.Browsable(false)]
            public System.Collections.Generic.IComparer<Manina.Windows.Forms.ImageListViewItem> Comparer { get; set; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.Description("Gets the default header text for this column type.")]
            [System.ComponentModel.Localizable(true)]
            public virtual string DefaultText { get; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.Description("Gets or sets the display order of the column.")]
            public int DisplayIndex { get; set; }
            [System.ComponentModel.Browsable(false)]
            public Manina.Windows.Forms.ImageListView.IGrouper Grouper { get; set; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the ImageListView owning this item.")]
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets a unique string to identify for this item.")]
            public string Key { get; set; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.Description("Gets or sets the column header text.")]
            [System.ComponentModel.Localizable(true)]
            public string Text { get; set; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.Description("Gets or sets the type of information displayed by the column.")]
            public Manina.Windows.Forms.ColumnType Type { get; set; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.DefaultValue(true)]
            [System.ComponentModel.Description("Gets or sets a value indicating whether the control is displayed.")]
            public bool Visible { get; set; }
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Appearance")]
            [System.ComponentModel.DefaultValue(100)]
            [System.ComponentModel.Description("Gets or sets the column width.")]
            [System.ComponentModel.Localizable(true)]
            public int Width { get; set; }
            public void AutoFit() { }
            public object Clone() { }
            public void ResetText() { }
            public bool ShouldSerializeText() { }
            public override string ToString() { }
        }
        public class ImageListViewColumnHeaderCollection : System.Collections.Generic.ICollection<Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader>, System.Collections.Generic.IEnumerable<Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader>, System.Collections.Generic.IList<Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader>, System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList
        {
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the number of columns in the collection.")]
            public int Count { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the ImageListView owning this collection.")]
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets a value indicating whether the Collection is read-only.")]
            public bool IsReadOnly { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets or item at the specified index within the collection.")]
            public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader this[int index] { get; set; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets or sets the item with the specified type within the collection.")]
            public Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader this[Manina.Windows.Forms.ColumnType type] { get; }
            public void Add(Manina.Windows.Forms.ColumnType type) { }
            public void Add(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader item) { }
            public void Add(Manina.Windows.Forms.ColumnType type, int width) { }
            public void Add(Manina.Windows.Forms.ColumnType type, string text) { }
            public void Add(string key, string text) { }
            public void Add(Manina.Windows.Forms.ColumnType type, string text, int width) { }
            public void Add(string key, string text, int width) { }
            public void AddRange(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader[] items) { }
            public void Clear() { }
            public bool Contains(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader item) { }
            public System.Collections.Generic.List<Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader> GetDisplayedColumns() { }
            public System.Collections.Generic.IEnumerator<Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader> GetEnumerator() { }
            public int IndexOf(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader item) { }
            public void Insert(int index, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader item) { }
            public bool Remove(Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader item) { }
            public void RemoveAt(int index) { }
        }
        public class ImageListViewGroup : System.Collections.Generic.IEnumerable<Manina.Windows.Forms.ImageListViewItem>, System.Collections.IEnumerable, System.IComparable<Manina.Windows.Forms.ImageListView.ImageListViewGroup>
        {
            public bool Collapsed { get; set; }
            public int FirstItemIndex { get; }
            public int ItemCount { get; }
            public int LastItemIndex { get; }
            public string Name { get; }
            public int CompareTo(Manina.Windows.Forms.ImageListView.ImageListViewGroup other) { }
            public System.Collections.Generic.IEnumerator<Manina.Windows.Forms.ImageListViewItem> GetEnumerator() { }
            public System.Collections.Generic.List<int> ItemIndicesInRectangle(System.Drawing.Rectangle rec, System.Windows.Forms.ScrollOrientation orientation, System.Drawing.Size itemSize) { }
        }
        public abstract class ImageListViewItemAdaptor : System.IDisposable
        {
            protected ImageListViewItemAdaptor() { }
            public abstract void Dispose();
            public abstract Manina.Windows.Forms.Utility.Tuple<Manina.Windows.Forms.ColumnType, string, object>[] GetDetails(object key);
            public abstract string GetSourceImage(object key);
            public abstract System.Drawing.Image GetThumbnail(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation);
            public abstract string GetUniqueIdentifier(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation);
        }
        public class ImageListViewItemCollection : System.Collections.Generic.ICollection<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IEnumerable<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IList<Manina.Windows.Forms.ImageListViewItem>, System.Collections.ICollection, System.Collections.IEnumerable, System.Collections.IList
        {
            public int Count { get; }
            public Manina.Windows.Forms.ImageListViewItem FocusedItem { get; set; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the ImageListView owning this collection.")]
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            public bool IsReadOnly { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets or sets the item at the specified index.")]
            public Manina.Windows.Forms.ImageListViewItem this[int index] { get; set; }
            public void Add(Manina.Windows.Forms.ImageListViewItem item) { }
            public void Add(string filename) { }
            public void Add(Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Add(Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image initialThumbnail) { }
            public void Add(object key, string text) { }
            public void Add(string filename, System.Drawing.Image initialThumbnail) { }
            public void Add(Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image initialThumbnail, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Add(object key, string text, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Add(object key, string text, System.Drawing.Image initialThumbnail) { }
            public void Add(object key, string text, System.Drawing.Image initialThumbnail, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void AddRange(Manina.Windows.Forms.ImageListViewItem[] items) { }
            public void AddRange(string[] filenames) { }
            public void AddRange(Manina.Windows.Forms.ImageListViewItem[] items, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Clear() { }
            public bool Contains(Manina.Windows.Forms.ImageListViewItem item) { }
            public System.Collections.Generic.IEnumerator<Manina.Windows.Forms.ImageListViewItem> GetEnumerator() { }
            public void Insert(int index, Manina.Windows.Forms.ImageListViewItem item) { }
            public void Insert(int index, string filename) { }
            public void Insert(int index, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Insert(int index, object key, string text) { }
            public void Insert(int index, string filename, System.Drawing.Image initialThumbnail) { }
            public void Insert(int index, object key, string text, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public void Insert(int index, object key, string text, System.Drawing.Image initialThumbnail) { }
            public void Insert(int index, object key, string text, System.Drawing.Image initialThumbnail, Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor adaptor) { }
            public bool Remove(Manina.Windows.Forms.ImageListViewItem item) { }
            public void RemoveAt(int index) { }
        }
        public class ImageListViewRenderer : System.IDisposable
        {
            public ImageListViewRenderer() { }
            public virtual bool CanApplyColors { get; }
            public System.Drawing.Rectangle ClientBounds { get; }
            public bool Clip { get; set; }
            public System.Drawing.Rectangle ColumnHeaderBounds { get; }
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            public System.Drawing.Rectangle ItemAreaBounds { get; }
            public Manina.Windows.Forms.ItemDrawOrder ItemDrawOrder { get; set; }
            public bool ItemsDrawnFirst { get; set; }
            public virtual Manina.Windows.Forms.ImageListViewColor[] PreferredColors { get; }
            public virtual void Dispose() { }
            public virtual void DrawBackground(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
            public virtual void DrawBorder(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
            public virtual void DrawCheckBox(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
            public virtual void DrawColumnExtender(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
            public virtual void DrawColumnHeader(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ColumnState state, System.Drawing.Rectangle bounds) { }
            public virtual void DrawFileIcon(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
            public virtual void DrawGalleryImage(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
            public virtual void DrawGroupHeader(System.Drawing.Graphics g, string name, System.Drawing.Rectangle bounds) { }
            public virtual void DrawInsertionCaret(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
            public virtual void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
            public virtual void DrawOverlay(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
            public virtual void DrawPane(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
            public virtual void DrawSelectionRectangle(System.Drawing.Graphics g, System.Drawing.Rectangle selection) { }
            public virtual void DrawSubItemItemOverlay(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, int subItemIndex, bool subItemHovered, System.Drawing.Rectangle bounds) { }
            protected override void Finalize() { }
            public System.Drawing.Image GetImageAsync(Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Size size) { }
            public virtual void InitializeGraphics(System.Drawing.Graphics g) { }
            public virtual int MeasureColumnHeaderHeight() { }
            public virtual int MeasureGroupHeaderHeight() { }
            public virtual System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
            public virtual System.Drawing.Size MeasureItemMargin(Manina.Windows.Forms.View view) { }
            public virtual void OnLayout(Manina.Windows.Forms.LayoutEventArgs e) { }
        }
        public class ImageListViewSelectedItemCollection : System.Collections.Generic.ICollection<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IEnumerable<Manina.Windows.Forms.ImageListViewItem>, System.Collections.Generic.IList<Manina.Windows.Forms.ImageListViewItem>, System.Collections.IEnumerable
        {
            [System.ComponentModel.Browsable(true)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the number of elements contained in the collection.")]
            public int Count { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets the ImageListView owning this collection.")]
            public Manina.Windows.Forms.ImageListView ImageListView { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets a value indicating whether the collection is read-only.")]
            public bool IsReadOnly { get; }
            [System.ComponentModel.Browsable(false)]
            [System.ComponentModel.Category("Behavior")]
            [System.ComponentModel.Description("Gets or sets the item at the specified index")]
            public Manina.Windows.Forms.ImageListViewItem this[int index] { get; }
            public bool Contains(Manina.Windows.Forms.ImageListViewItem item) { }
            public System.Collections.Generic.IEnumerator<Manina.Windows.Forms.ImageListViewItem> GetEnumerator() { }
        }
    }
    [System.ComponentModel.TypeConverter(typeof(Manina.Windows.Forms.ImageListViewColorTypeConverter))]
    public class ImageListViewColor
    {
        public ImageListViewColor() { }
        public ImageListViewColor(string definition) { }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Window")]
        [System.ComponentModel.Description("Gets or sets the background color of alternating cells in Details View.")]
        public System.Drawing.Color AlternateBackColor { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "ControlText")]
        [System.ComponentModel.Description("Gets or sets the foreground color of alternating cells text in Details View.")]
        public System.Drawing.Color AlternateCellForeColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Window")]
        [System.ComponentModel.Description("Gets or sets the background color of the ImageListViewItem.")]
        public System.Drawing.Color BackColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "64, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the border color of the ImageListViewItem.")]
        public System.Drawing.Color BorderColor { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "ControlText")]
        [System.ComponentModel.Description("Gets or sets the foreground color of the cell text in Details View.")]
        public System.Drawing.Color CellForeColor { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "32, 212, 208, 200")]
        [System.ComponentModel.Description("Gets or sets the cells background color1 of the column header.")]
        public System.Drawing.Color ColumnHeaderBackColor1 { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "196, 212, 208, 200")]
        [System.ComponentModel.Description("Gets or sets the cells background color2 of the column header.")]
        public System.Drawing.Color ColumnHeaderBackColor2 { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "WindowText")]
        [System.ComponentModel.Description("Gets or sets the cells foreground color of the column header text.")]
        public System.Drawing.Color ColumnHeaderForeColor { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "16, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background hover color1 of the column header.")]
        public System.Drawing.Color ColumnHeaderHoverColor1 { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "64, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background hover color2 of the column header.")]
        public System.Drawing.Color ColumnHeaderHoverColor2 { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "16, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the cells background color if column is selected in Details View.")]
        public System.Drawing.Color ColumnSelectColor { get; set; }
        [System.ComponentModel.Category("Appearance Details View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "32, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the color of the separator in Details View.")]
        public System.Drawing.Color ColumnSeparatorColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Window")]
        [System.ComponentModel.Description("Gets or sets the background color of the ImageListView control.")]
        public System.Drawing.Color ControlBackColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Control")]
        [System.ComponentModel.Description("Gets or sets the background color of the ImageListView control in its disabled st" +
            "ate.")]
        public System.Drawing.Color DisabledBackColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "32, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the border color of the ImageListViewItem if the item is disabled.")]
        public System.Drawing.Color DisabledBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "0, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the background gradient color1 if the ImageListViewItem is disabled." +
            "")]
        public System.Drawing.Color DisabledColor1 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "32, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the background gradient color2 if the ImageListViewItem is disabled." +
            "")]
        public System.Drawing.Color DisabledColor2 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the fore color of the ImageListViewItem if the item is disabled.")]
        public System.Drawing.Color DisabledForeColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "ControlText")]
        [System.ComponentModel.Description("Gets or sets the foreground color of the ImageListViewItem.")]
        public System.Drawing.Color ForeColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "64, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the border color of the ImageListViewItem if the item is hovered.")]
        public System.Drawing.Color HoverBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "8, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background gradient color1 if the ImageListViewItem is hovered.")]
        public System.Drawing.Color HoverColor1 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "64, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background gradient color2 if the ImageListViewItem is hovered.")]
        public System.Drawing.Color HoverColor2 { get; set; }
        [System.ComponentModel.Category("Appearance Image")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 255, 255, 255")]
        [System.ComponentModel.Description("Gets or sets the image inner border color for thumbnails and pane.")]
        public System.Drawing.Color ImageInnerBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance Image")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the image outer border color for thumbnails and pane.")]
        public System.Drawing.Color ImageOuterBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Highlight")]
        [System.ComponentModel.Description("Gets or sets the color of the insertion caret.")]
        public System.Drawing.Color InsertionCaretColor { get; set; }
        [System.ComponentModel.Category("Appearance Pane View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "16, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the background color of the image pane.")]
        public System.Drawing.Color PaneBackColor { get; set; }
        [System.ComponentModel.Category("Appearance Pane View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "196, 0, 0, 0")]
        [System.ComponentModel.Description("Gets or sets the color of labels in pane view.")]
        public System.Drawing.Color PaneLabelColor { get; set; }
        [System.ComponentModel.Category("Appearance Pane View")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the separator line color between image pane and thumbnail view.")]
        public System.Drawing.Color PaneSeparatorColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the border color of the ImageListViewItem if the item is selected.")]
        public System.Drawing.Color SelectedBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "16, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background gradient color1 if the ImageListViewItem is selected." +
            "")]
        public System.Drawing.Color SelectedColor1 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background gradient color2 if the ImageListViewItem is selected." +
            "")]
        public System.Drawing.Color SelectedColor2 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "ControlText")]
        [System.ComponentModel.Description("Gets or sets the fore color of the ImageListViewItem if the item is selected.")]
        public System.Drawing.Color SelectedForeColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Highlight")]
        [System.ComponentModel.Description("Gets or sets the color of the selection rectangle border.")]
        public System.Drawing.Color SelectionRectangleBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background color1 of the selection rectangle.")]
        public System.Drawing.Color SelectionRectangleColor1 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 10, 36, 106")]
        [System.ComponentModel.Description("Gets or sets the background color2 of the selection rectangle.")]
        public System.Drawing.Color SelectionRectangleColor2 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the border color of the ImageListViewItem if the control is not focu" +
            "sed.")]
        public System.Drawing.Color UnFocusedBorderColor { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "16, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the background gradient color1 of the ImageListViewItem if the contr" +
            "ol is not focused.")]
        public System.Drawing.Color UnFocusedColor1 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "64, 128, 128, 128")]
        [System.ComponentModel.Description("Gets or sets the background gradient color2 of the ImageListViewItem if the contr" +
            "ol is not focused.")]
        public System.Drawing.Color UnFocusedColor2 { get; set; }
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "ControlText")]
        [System.ComponentModel.Description("Gets or sets the fore color of the ImageListViewItem if the control is not focuse" +
            "d.")]
        public System.Drawing.Color UnFocusedForeColor { get; set; }
        public static Manina.Windows.Forms.ImageListViewColor Default { get; }
        public static Manina.Windows.Forms.ImageListViewColor Mandarin { get; }
        public static Manina.Windows.Forms.ImageListViewColor Noir { get; }
        public void CopyFrom(Manina.Windows.Forms.ImageListViewColor source) { }
        public override bool Equals(object obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    [System.ComponentModel.TypeConverter(typeof(Manina.Windows.Forms.ImageListViewItemTypeConverter))]
    public class ImageListViewItem : System.ICloneable
    {
        public ImageListViewItem() { }
        public ImageListViewItem(object key) { }
        public ImageListViewItem(string filename) { }
        public ImageListViewItem(object key, string text) { }
        public ImageListViewItem(string filename, string text) { }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the adaptor of this item.")]
        public Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor Adaptor { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets the name of the artist.")]
        public string Artist { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets a value determining if the item is checked.")]
        public bool Checked { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets image copyright information.")]
        public string Copyright { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets the last access date of the image file represented by this item.")]
        public System.DateTime DateAccessed { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets the creation date of the image file represented by this item.")]
        public System.DateTime DateCreated { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets the modification date of the image file represented by this item.")]
        public System.DateTime DateModified { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets the date and time the image was taken.")]
        public System.DateTime DateTaken { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets image dimensions.")]
        public System.Drawing.Size Dimensions { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Gets a value determining if the item is enabled.")]
        public bool Enabled { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Camera Properties")]
        [System.ComponentModel.Description("Gets the camera model.")]
        public string EquipmentModel { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Camera Properties")]
        [System.ComponentModel.Description("Gets the exposure time in seconds.")]
        public float ExposureTime { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Camera Properties")]
        [System.ComponentModel.Description("Gets the F number.")]
        public float FNumber { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets or sets the name of the image file represented by this item.")]
        [System.ComponentModel.Editor(typeof(Manina.Windows.Forms.OpenFileDialogEditor), typeof(System.Drawing.Design.UITypeEditor))]
        public string FileName { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets the path of the image file represented by this item.")]
        public string FilePath { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets file size in bytes.")]
        public long FileSize { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description("Gets the shell type of the image file represented by this item.")]
        public string FileType { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Camera Properties")]
        [System.ComponentModel.Description("Gets focal length of the lens in millimeters.")]
        public float FocalLength { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets a value determining if the item is focused.")]
        public bool Focused { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("File Properties")]
        [System.ComponentModel.Description(" Gets the name of the folder represented by this item.")]
        public string FolderName { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Camera Properties")]
        [System.ComponentModel.Description("Gets the ISO speed.")]
        public ushort ISOSpeed { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets image description.")]
        public string ImageDescription { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the ImageListView owning this item.")]
        public Manina.Windows.Forms.ImageListView ImageListView { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the index of the item.")]
        public int Index { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the large shell icon of the image file represented by this item.")]
        public System.Drawing.Image LargeIcon { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets rating in percent between 0-99.")]
        public ushort Rating { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets image resolution in pixels per inch.")]
        public System.Drawing.SizeF Resolution { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(false)]
        [System.ComponentModel.Description("Gets or sets a value determining if the item is selected.")]
        public bool Selected { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the small shell icon of the image file represented by this item.")]
        public System.Drawing.Image SmallIcon { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets the name of the application that created this file.")]
        public string Software { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets the star rating between 0-5.")]
        public ushort StarRating { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the collection of sub items.")]
        public Manina.Windows.Forms.ImageListViewSubItemCollection SubItems { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Data")]
        [System.ComponentModel.Description("Gets or sets the user-defined data associated with the item.")]
        [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]
        public object Tag { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the text associated with this item. If left blank, item Text reverts" +
            " to the name of the image file.")]
        public string Text { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the cache state of the item thumbnail.")]
        public Manina.Windows.Forms.CacheState ThumbnailCacheState { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets the thumbnail image.")]
        public System.Drawing.Image ThumbnailImage { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Image Properties")]
        [System.ComponentModel.Description("Gets user comments.")]
        public string UserComment { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the virtual item key associated with this item.")]
        public object VirtualItemKey { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.DefaultValue(0)]
        [System.ComponentModel.Description("Gets or sets the draw order of the item.")]
        public int ZOrder { get; set; }
        public void BeginEdit() { }
        public object Clone() { }
        public void EndEdit() { }
        public void EndEdit(bool update) { }
        public System.Drawing.Image GetCachedImage(Manina.Windows.Forms.CachedImageType imageType) { }
        public string GetSubItemText(Manina.Windows.Forms.ColumnType type) { }
        public override string ToString() { }
        public void Update() { }
    }
    public class ImageListViewSubItem
    {
        public ImageListViewSubItem(Manina.Windows.Forms.ImageListViewItem parent, string text) { }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets the text associated with this sub item.")]
        public string Text { get; set; }
    }
    public class ImageListViewSubItemCollection : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Manina.Windows.Forms.ImageListViewSubItem>>, System.Collections.Generic.IDictionary<string, Manina.Windows.Forms.ImageListViewSubItem>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Manina.Windows.Forms.ImageListViewSubItem>>, System.Collections.IEnumerable
    {
        public ImageListViewSubItemCollection(Manina.Windows.Forms.ImageListViewItem parent) { }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the number of columns in the collection.")]
        public int Count { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets a value indicating whether the Collection is read-only.")]
        public bool IsReadOnly { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets or sets a sub item.")]
        public Manina.Windows.Forms.ImageListViewSubItem this[string key] { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets a sub item.")]
        public Manina.Windows.Forms.ImageListViewSubItem this[Manina.Windows.Forms.ColumnType type] { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Appearance")]
        [System.ComponentModel.Description("Gets a sub item.")]
        public Manina.Windows.Forms.ImageListViewSubItem this[Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column] { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the collection of keys in the dictionary.")]
        public System.Collections.Generic.ICollection<string> Keys { get; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets the collection of values in the dictionary.")]
        public System.Collections.Generic.ICollection<Manina.Windows.Forms.ImageListViewSubItem> Values { get; }
        public void Add(string key, string text) { }
        public void Clear() { }
        public bool ContainsKey(string key) { }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, Manina.Windows.Forms.ImageListViewSubItem>> GetEnumerator() { }
        public bool Remove(string key) { }
        public bool TryGetValue(string key, out Manina.Windows.Forms.ImageListViewSubItem value) { }
    }
    public delegate void ItemCheckBoxClickEventHandler(object sender, Manina.Windows.Forms.ItemEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ItemClickEventArgs : System.EventArgs
    {
        public ItemClickEventArgs(Manina.Windows.Forms.ImageListViewItem item, int subItemIndex, System.Drawing.Point location, System.Windows.Forms.MouseButtons buttons) { }
        public System.Windows.Forms.MouseButtons Buttons { get; }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
        public System.Drawing.Point Location { get; }
        public int SubItemIndex { get; }
        public int X { get; }
        public int Y { get; }
    }
    public delegate void ItemClickEventHandler(object sender, Manina.Windows.Forms.ItemClickEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ItemCollectionChangedEventArgs : System.EventArgs
    {
        public ItemCollectionChangedEventArgs(System.ComponentModel.CollectionChangeAction action, Manina.Windows.Forms.ImageListViewItem item) { }
        public System.ComponentModel.CollectionChangeAction Action { get; }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
    }
    public delegate void ItemCollectionChangedEventHandler(object sender, Manina.Windows.Forms.ItemCollectionChangedEventArgs e);
    public delegate void ItemDoubleClickEventHandler(object sender, Manina.Windows.Forms.ItemClickEventArgs e);
    public enum ItemDrawOrder
    {
        ItemIndex = 0,
        ZOrder = 1,
        HoveredNormalSelected = 2,
        HoveredSelectedNormal = 3,
        NormalHoveredSelected = 4,
        NormalSelectedHovered = 5,
        SelectedHoveredNormal = 6,
        SelectedNormalHovered = 7,
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ItemEventArgs : System.EventArgs
    {
        public ItemEventArgs(Manina.Windows.Forms.ImageListViewItem item) { }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ItemHoverEventArgs : System.EventArgs
    {
        public ItemHoverEventArgs(Manina.Windows.Forms.ImageListViewItem item, int subItemIndex, Manina.Windows.Forms.ImageListViewItem previousItem, int previousSubItemIndex) { }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
        public Manina.Windows.Forms.ImageListViewItem PreviousItem { get; }
        public int PreviousSubItemIndex { get; }
        public int SubItemIndex { get; }
    }
    public delegate void ItemHoverEventHandler(object sender, Manina.Windows.Forms.ItemHoverEventArgs e);
    [System.Flags]
    public enum ItemState
    {
        None = 0,
        Selected = 1,
        Focused = 2,
        Hovered = 4,
        Disabled = 8,
    }
    public enum ItemVisibility
    {
        NotVisible = 0,
        PartiallyVisible = 1,
        Visible = 2,
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class LayoutEventArgs : System.EventArgs
    {
        public LayoutEventArgs(System.Drawing.Rectangle itemAreaBounds) { }
        public System.Drawing.Rectangle ItemAreaBounds { get; set; }
    }
    public class Metadata
    {
        public string Artist;
        public string Comment;
        public string Copyright;
        public double DPIX;
        public double DPIY;
        public System.DateTime DateTaken;
        public string EquipmentManufacturer;
        public string EquipmentModel;
        public System.Exception Error;
        public double ExposureTime;
        public double FNumber;
        public double FocalLength;
        public int Height;
        public int ISOSpeed;
        public string ImageDescription;
        public int Rating;
        public string Software;
        public int Width;
        public Metadata() { }
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class PaneResizedEventArgs : System.EventArgs
    {
        public PaneResizedEventArgs(int paneWidth) { }
        public int PaneWidth { get; }
    }
    public delegate void PaneResizedEventHandler(object sender, Manina.Windows.Forms.PaneResizedEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class PaneResizingEventArgs : System.EventArgs
    {
        public PaneResizingEventArgs(int paneWidth) { }
        public int PaneWidth { get; }
    }
    public delegate void PaneResizingEventHandler(object sender, Manina.Windows.Forms.PaneResizingEventArgs e);
    public enum ProcessingMode
    {
        FIFO = 0,
        LIFO = 1,
    }
    [System.ComponentModel.DefaultEvent("DoWork")]
    [System.ComponentModel.Description("A background worker with a work queue.")]
    [System.Drawing.ToolboxBitmap(typeof(Manina.Windows.Forms.QueuedBackgroundWorker))]
    public class QueuedBackgroundWorker : System.ComponentModel.Component
    {
        public QueuedBackgroundWorker() { }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Gets or sets a value indicating whether or not the worker thread is a background " +
            "thread.")]
        public bool IsBackground { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behaviour")]
        [System.ComponentModel.DefaultValue(5)]
        public int PriorityQueues { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behaviour")]
        [System.ComponentModel.DefaultValue(typeof(Manina.Windows.Forms.ProcessingMode), "FIFO")]
        public Manina.Windows.Forms.ProcessingMode ProcessingMode { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Determines whether the QueuedBackgroundWorker started working.")]
        public bool Started { get; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behaviour")]
        [System.ComponentModel.DefaultValue("")]
        public string ThreadName { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behaviour")]
        [System.ComponentModel.DefaultValue(5)]
        public int Threads { get; set; }
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs when RunWorkerAsync is called.")]
        public event Manina.Windows.Forms.QueuedWorkerDoWorkEventHandler DoWork;
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.Category("Behavior")]
        [System.ComponentModel.Description("Occurs when the background operation of an item has completed.")]
        public event Manina.Windows.Forms.RunQueuedWorkerCompletedEventHandler RunWorkerCompleted;
        public void CancelAsync() { }
        public void CancelAsync(int priority) { }
        public void CancelAsync(object argument) { }
        protected override void Dispose(bool disposing) { }
        public System.Threading.ApartmentState GetApartmentState() { }
        protected virtual void OnDoWork(Manina.Windows.Forms.QueuedWorkerDoWorkEventArgs e) { }
        protected virtual void OnRunWorkerCompleted(Manina.Windows.Forms.QueuedWorkerCompletedEventArgs e) { }
        public void Pause() { }
        public void Resume() { }
        public void RunWorkerAsync() { }
        public void RunWorkerAsync(object argument) { }
        public void RunWorkerAsync(object argument, int priority) { }
        public void RunWorkerAsync(object argument, int priority, bool single) { }
        public void SetApartmentState(System.Threading.ApartmentState state) { }
    }
    public class QueuedWorkerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        public QueuedWorkerCompletedEventArgs(object argument, object result, int priority, System.Exception error, bool cancelled) { }
        public int Priority { get; }
        public object Result { get; }
    }
    public class QueuedWorkerDoWorkEventArgs : System.ComponentModel.DoWorkEventArgs
    {
        public QueuedWorkerDoWorkEventArgs(object argument, int priority) { }
        public int Priority { get; }
    }
    public delegate void QueuedWorkerDoWorkEventHandler(object sender, Manina.Windows.Forms.QueuedWorkerDoWorkEventArgs e);
    public delegate void RunQueuedWorkerCompletedEventHandler(object sender, Manina.Windows.Forms.QueuedWorkerCompletedEventArgs e);
    public class ShellInfo
    {
        public System.Exception Error;
        public string FileType;
        public System.Drawing.Image LargeIcon;
        public System.Drawing.Image SmallIcon;
        public ShellInfo() { }
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ShellInfoCachedEventArgs : System.EventArgs
    {
        public ShellInfoCachedEventArgs(string extension, System.Drawing.Image smallIcon, System.Drawing.Image largeIcon, string filetype) { }
        public string Extension { get; }
        public string FileType { get; }
        public System.Drawing.Image LargeIcon { get; }
        public System.Drawing.Image SmallIcon { get; }
    }
    public delegate void ShellInfoCachedEventHandler(object sender, Manina.Windows.Forms.ShellInfoCachedEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ShellInfoCachingEventArgs : System.EventArgs
    {
        public ShellInfoCachingEventArgs(string extension) { }
        public string Extension { get; }
    }
    public delegate void ShellInfoCachingEventHandler(object sender, Manina.Windows.Forms.ShellInfoCachingEventArgs e);
    public enum SortOrder
    {
        None = 0,
        Ascending = 1,
        Descending = 2,
        AscendingNatural = 3,
        DescendingNatural = 4,
    }
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ThumbnailCachedEventArgs : System.EventArgs
    {
        public ThumbnailCachedEventArgs(Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image thumbnail, System.Drawing.Size size, bool thumbnailImage) { }
        public bool IsThumbnail { get; }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
        public System.Drawing.Size Size { get; }
        public System.Drawing.Image Thumbnail { get; }
    }
    public delegate void ThumbnailCachedEventHandler(object sender, Manina.Windows.Forms.ThumbnailCachedEventArgs e);
    [System.Runtime.InteropServices.ComVisible(true)]
    [System.Serializable]
    public class ThumbnailCachingEventArgs : System.EventArgs
    {
        public ThumbnailCachingEventArgs(Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Size size) { }
        public Manina.Windows.Forms.ImageListViewItem Item { get; }
        public System.Drawing.Size Size { get; }
    }
    public delegate void ThumbnailCachingEventHandler(object sender, Manina.Windows.Forms.ThumbnailCachingEventArgs e);
    public enum UseEmbeddedThumbnails
    {
        Always = 0,
        Auto = 1,
        Never = 2,
    }
    public static class Utility
    {
        public static void DrawRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Pen pen, System.Drawing.Rectangle rect, int radius) { }
        public static void DrawRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Pen pen, System.Drawing.RectangleF rect, float radius) { }
        public static void DrawRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Pen pen, int x, int y, int width, int height, int radius) { }
        public static void DrawRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Pen pen, float x, float y, float width, float height, float radius) { }
        public static void FillRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Brush brush, System.Drawing.Rectangle rect, int radius) { }
        public static void FillRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Brush brush, System.Drawing.RectangleF rect, float radius) { }
        public static void FillRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Brush brush, int x, int y, int width, int height, int radius) { }
        public static void FillRoundedRectangle(System.Drawing.Graphics graphics, System.Drawing.Brush brush, float x, float y, float width, float height, float radius) { }
        public static string FormatSize(long size) { }
        public static System.Drawing.Rectangle GetSizedImageBounds(System.Drawing.Image image, System.Drawing.Rectangle fit) { }
        public static System.Drawing.Rectangle GetSizedImageBounds(System.Drawing.Image image, System.Drawing.Rectangle fit, float hAlign, float vAlign) { }
        public class Tuple<T1>
        {
            public Tuple(T1 item1) { }
            public T1 Item1 { get; }
        }
        public class Tuple<T1, T2> : Manina.Windows.Forms.Utility.Tuple<T1>
        {
            public Tuple(T1 item1, T2 item2) { }
            public T2 Item2 { get; }
        }
        public class Tuple<T1, T2, T3> : Manina.Windows.Forms.Utility.Tuple<T1, T2>
        {
            public Tuple(T1 item1, T2 item2, T3 item3) { }
            public T3 Item3 { get; }
        }
        public static class Tuple
        {
            public static Manina.Windows.Forms.Utility.Tuple<T1> Create<T1>(T1 item1) { }
            public static Manina.Windows.Forms.Utility.Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2) { }
            public static Manina.Windows.Forms.Utility.Tuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3) { }
        }
    }
    public enum View
    {
        Details = 0,
        Gallery = 1,
        Pane = 2,
        Thumbnails = 3,
        HorizontalStrip = 4,
        VerticalStrip = 5,
    }
    public class WPFExtractor : Manina.Windows.Forms.GDIExtractor
    {
        public WPFExtractor() { }
        public override string Name { get; }
        public override Manina.Windows.Forms.Metadata GetMetadata(string path) { }
        public override System.Drawing.Image GetThumbnail(System.Drawing.Image image, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
        public override System.Drawing.Image GetThumbnail(string filename, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
    }
}
namespace Manina.Windows.Forms.ImageListViewItemAdaptors
{
    public class FileSystemAdaptor : Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor
    {
        public FileSystemAdaptor() { }
        public override void Dispose() { }
        public override Manina.Windows.Forms.Utility.Tuple<Manina.Windows.Forms.ColumnType, string, object>[] GetDetails(object key) { }
        public override string GetSourceImage(object key) { }
        public override System.Drawing.Image GetThumbnail(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
        public override string GetUniqueIdentifier(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
    }
    public class URIAdaptor : Manina.Windows.Forms.ImageListView.ImageListViewItemAdaptor
    {
        public URIAdaptor() { }
        public override void Dispose() { }
        public override Manina.Windows.Forms.Utility.Tuple<Manina.Windows.Forms.ColumnType, string, object>[] GetDetails(object key) { }
        public override string GetSourceImage(object key) { }
        public override System.Drawing.Image GetThumbnail(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
        public override string GetUniqueIdentifier(object key, System.Drawing.Size size, Manina.Windows.Forms.UseEmbeddedThumbnails useEmbeddedThumbnails, bool useExifOrientation) { }
    }
}
namespace Manina.Windows.Forms.ImageListViewRenderers
{
    public class DebugRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public DebugRenderer() { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override void DrawOverlay(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
    }
    public class DefaultRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public DefaultRenderer() { }
    }
    public class MeerkatRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public MeerkatRenderer() { }
        public override Manina.Windows.Forms.ImageListViewColor[] PreferredColors { get; }
        public override void DrawColumnExtender(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnHeader(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ColumnState state, System.Drawing.Rectangle bounds) { }
        public override void DrawGalleryImage(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override void InitializeGraphics(System.Drawing.Graphics g) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
    public class NewYear2010Renderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public NewYear2010Renderer() { }
        public override void Dispose() { }
        public override void DrawOverlay(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void InitializeGraphics(System.Drawing.Graphics g) { }
        public override void OnLayout(Manina.Windows.Forms.LayoutEventArgs e) { }
    }
    public class NoirRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public NoirRenderer() { }
        public NoirRenderer(int reflectionSize) { }
        public override bool CanApplyColors { get; }
        public int ReflectionSize { get; set; }
        public override void DrawBackground(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawCheckBox(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnExtender(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnHeader(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ColumnState state, System.Drawing.Rectangle bounds) { }
        public override void DrawFileIcon(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawGalleryImage(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
        public override void DrawGroupHeader(System.Drawing.Graphics g, string name, System.Drawing.Rectangle bounds) { }
        public override void DrawInsertionCaret(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override void DrawPane(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
        public override void DrawSelectionRectangle(System.Drawing.Graphics g, System.Drawing.Rectangle selection) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
    public class ThemeRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public ThemeRenderer() { }
        public override bool CanApplyColors { get; }
        public bool VisualStylesEnabled { get; }
        public override void DrawCheckBox(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnExtender(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnHeader(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ColumnState state, System.Drawing.Rectangle bounds) { }
        public override void DrawFileIcon(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawGroupHeader(System.Drawing.Graphics g, string name, System.Drawing.Rectangle bounds) { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
    public class TilesRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public TilesRenderer() { }
        public TilesRenderer(int tileWidth) { }
        public int TileWidth { get; set; }
        public override void Dispose() { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
    public class XPRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public XPRenderer() { }
        public override bool CanApplyColors { get; }
        public override void DrawBackground(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnExtender(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawColumnHeader(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListView.ImageListViewColumnHeader column, Manina.Windows.Forms.ColumnState state, System.Drawing.Rectangle bounds) { }
        public override void DrawGalleryImage(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
        public override void DrawGroupHeader(System.Drawing.Graphics g, string name, System.Drawing.Rectangle bounds) { }
        public override void DrawInsertionCaret(System.Drawing.Graphics g, System.Drawing.Rectangle bounds) { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override void DrawPane(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Image image, System.Drawing.Rectangle bounds) { }
        public override void DrawSelectionRectangle(System.Drawing.Graphics g, System.Drawing.Rectangle selection) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
    public class ZoomingRenderer : Manina.Windows.Forms.ImageListView.ImageListViewRenderer
    {
        public ZoomingRenderer() { }
        public ZoomingRenderer(float zoomRatio) { }
        public float ZoomRatio { get; set; }
        public override void DrawCheckBox(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawFileIcon(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, System.Drawing.Rectangle bounds) { }
        public override void DrawItem(System.Drawing.Graphics g, Manina.Windows.Forms.ImageListViewItem item, Manina.Windows.Forms.ItemState state, System.Drawing.Rectangle bounds) { }
        public override void InitializeGraphics(System.Drawing.Graphics g) { }
        public override System.Drawing.Size MeasureItem(Manina.Windows.Forms.View view) { }
    }
}